AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  feedback-tool-backend

  Sample SAM Template for feedback-tool-backend
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
  Api:
    Cors: "*"

Resources:
  GetSessionsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get-sessions/
      Handler: app.handler
      Runtime: nodejs12.x
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          SESSION_TABLE_NAME: !Sub "${AWS::StackName}-Sessions"
      Events:
        Feedback:
          Type: Api
          Properties:
            Path: /sessions
            Method: get
  
  PutScoresFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: put-scores/
      Handler: app.handler
      Runtime: nodejs12.x
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          SESSION_TABLE_NAME: !Sub "${AWS::StackName}-Scores"
      Events:
        Feedback:
          Type: Api
          Properties:
            Path: /scores
            Method: post
  
  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-Sessions"
      AttributeDefinitions:
        - AttributeName: event_id
          AttributeType: S
      KeySchema:
        - AttributeName: event_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ScoresTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-Scores"
      AttributeDefinitions:
        - AttributeName: event_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: event_id
          KeyType: HASH
        - AttributeName: user_id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/sessions/"
  GetSessionsFunction:
    Description: "GetSessions Lambda Function ARN"
    Value: !GetAtt GetSessionsFunction.Arn
  GetSessionsFunctionIamRole:
    Description: "Implicit IAM Role created for GetSessions Function"
    Value: !GetAtt GetSessionsFunctionRole.Arn
